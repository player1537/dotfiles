#!/usr/bin/env python3
from __future__ import annotations
import collections
import fileinput
import hashlib
import json
import os
import pathlib
import sys

import fastcdc.fastcdc_py


def main(
    *,
    inpfiles: list[os.PathLike],
    size: int,
    overlap: int,
):
    for inpfile in inpfiles:
        with open(inpfile, 'rb') as inpfile:
            context = collections.deque(
                maxlen=overlap + 1,
            )

            for chunk in fastcdc.fastcdc_py.chunk_generator(
                stream=inpfile,
                min_size=size//2,
                avg_size=size,
                max_size=size*2,
                fat=True,
                hf=hashlib.sha256,
            ):
                context.append(chunk.data)

                print(json.dumps({
                    'id': chunk.hash,
                    'content': b''.join(context).decode('ascii', 'ignore'),
                }))


def cli():
    import argparse
    
    parser = argparse.ArgumentParser()
    parser.add_argument('--size', type=int, default=64)
    parser.add_argument('--overlap', type=int, default=0)
    parser.add_argument('inpfiles', type=pathlib.Path, nargs='+')
    args = vars(parser.parse_args())

    main(**args)


if __name__ == '__main__':
    cli()
